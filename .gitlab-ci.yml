cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .npm

version:
  image: $ARTIFACTORY_DOCKER_COMMON/node:lts
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "scheduled"
  needs: [ ]
  artifacts:
    reports:
      dotenv: variables.env
  before_script:
    - curl -L https://github.com/idc101/git-mkver/releases/download/v1.2.2/git-mkver-linux-amd64-1.2.2.tar.gz | tar xvz
    - mv git-mkver /usr/local/bin
  script:
    - VERSION=$(git mkver next --format '{Docker}')
    - echo $VERSION
    - echo "VERSION=$VERSION" >> variables.env

release-gitlab:
  image: $ARTIFACTORY_DOCKER_COMMON/node:lts
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"
  needs:
    - version
  before_script:
    - curl --location --output /usr/local/bin/release-cli "https://release-cli-downloads.s3.amazonaws.com/latest/release-cli-linux-amd64"
    - chmod +x /usr/local/bin/release-cli
    - release-cli -v
  script:
    - echo "Create Release in GitLab $TAG_NAME"
  release:
    name: "Release v$VERSION"
    description: "Automatically generated release v$VERSION"
    tag_name: "v$VERSION"
    ref: "$CI_COMMIT_SHA"

build:
  image: $ARTIFACTORY_DOCKER_COMMON/node:lts
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "scheduled"
  needs:
    - version
  artifacts:
    paths:
      - dist
  script:
    - npm ci --cache .npm --prefer-offline
    - npm run build-prod

lint:
  image: $ARTIFACTORY_DOCKER_COMMON/node:lts
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "scheduled"
  needs: [ ]
  script:
    - npm ci --cache .npm --prefer-offline
    - npm run lint

audit:
  image: $ARTIFACTORY_DOCKER_COMMON/node:lts
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "scheduled"
  needs: [ ]
  script:
    - npm ci --cache .npm --prefer-offline
    - npm audit --omit=dev

e2e:
  image: $ARTIFACTORY_DOCKER_COMMON/cypress/included:10.10.0
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "scheduled"
  needs:
    - build
  script:
    - npm ci --cache .npm --prefer-offline
    - npm run cy-verify
    - npm run ci-cypress

docker-build-and-release:
  image: $ARTIFACTORY_SERVICE_IMAGES_URL/buildah
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
  needs:
    - version
  script:
    - sed -i "s/docker\.io/$ARTIFACTORY_DOCKER_COMMON/g" Dockerfile
    - buildah bud --creds ${DOCKER_DEV_USER}:${DOCKER_DEV_PASSWORD} -t ${DOCKER_DEV_URL}/${DOCKER_IMAGE_NAME}:${VERSION}
    - buildah push --creds ${DOCKER_DEV_USER}:${DOCKER_DEV_PASSWORD} ${DOCKER_DEV_URL}/${DOCKER_IMAGE_NAME}:${VERSION}
